
filetype plugin on
filetype indent on

set encoding=utf8
set background=dark

setlocal textwidth=80

" Enable pathogen
call pathogen#infect()

" Some general mappings
" Toggle NERDTree on/off
nmap <silent> <F1> :NERDTreeToggle<CR> 
nmap <silent> <F2> :TbToggle<CR> 

" NERDTree configurations
" Set default width for NERDTree panel
let g:NERDTreeWinSize = 30

" Prevent modelines in files from being evaluated (avoids a potential
" security problem wherein a malicious user could write a hazardous
" modeline into a file) (override default value of 5)
set modelines=0

" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
set nocompatible  " Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start  " more powerful backspacing

" Now we set some defaults for the editor 
set autoindent    " always set autoindenting on
set nosmartindent
set showmatch   " Varðandi Brachets {} nett stuff
"set textwidth=0   " Don't wrap words by default
"set nobackup    " Don't keep a backup file
set backup
set backupdir=/tmp
set directory=/tmp,.
set viminfo='20,\"50  " read/write a .viminfo file, don't store more than
      " 50 lines of registers
set history=50    " keep 50 lines of command line history
set ruler         " show the cursor position all the time
set nohls         " Ég vil ekki highlight'a Search'ið
set incsearch     " Leitar um leið og þú skrifar
set ignorecase    " Leita án tilits til há- og lágstafi
"set virtualedit=all  " Fer um allt, mjög þægilegt
set nu!
"set nonumber     " Ég vil ekki hafa línunúmer
set number
set tabstop=2     " Hafa 2 tab stop
set smarttab
set expandtab     " Hafa space, ekki tab
set softtabstop=2 " ??
set shiftwidth=2  " ??
set wildmenu      " ??
set clipboard+=unnamed

" map control-backspace to delete the previous word
"imap <C-h> <C-W>

syntax on

let g:tex_flavor='latex'

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

"Tell vim to remember certain things when we exit
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
set viminfo='10,\"100,:20,%,n~/.viminfo

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`" 
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END 

"let g:clang_user_options='|| exit 0'
""let g:clang_auto_select=1
""let g:clang_compete_auto=0
"let g:clang_hl_errors=1
"let g:clang_snippets=1
"let g:clang_snippets_engine="ultisnips"
"let g:clang_close_preview=1
""let g:clang_use_library=1
""let g:clang_library_path="/to/path"
""let g:clang_complete_marcos=1
"let g:clang_complete_patterns=1
"" View errors:
""let g:clang_complete_copen=1

